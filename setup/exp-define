#!/usr/bin/env bash
# exp-define -- Define element of the experiment
# Usage: exp define WHAT NAME HOW...
#        exp define condition NAME VALUE1 [VALUE2]...
#        exp define program   NAME COMMAND
#        exp define measure   NAME REGEXP_BEFORE  REGEXP  REGEXP_AFTER
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2013-01-24
set -eu

export EXPROOT=$(exp-findroot)

[ $# -gt 0 ] || usage "$0" "WHAT to define is missing"
What=$1; shift

[ $# -gt 0 ] || usage "$0" "NAME is missing"
Name=$1; shift

# TODO expand glob pattern in any arguments?

cd "$EXPROOT"

case $What in
    condition)
        dir="condition/$Name="
        mkdir -p "$dir"
        for Value; do
            vdir="$dir/$Value"
            mkdir -p "$vdir"
            touch "$vdir/env"
        done
        # TODO decide what to do with the other ones not mentioned
        ;;

    program)
        dir="program/$Name"
        mkdir -p "$dir"
        touch "$dir"/env
        {
            echo "#!/usr/bin/env bash"
            for Command; do
                echo "$Command"
            done
        } >"$dir"/run
        chmod +x "$dir"/run
        ;;

    measure)
        dir="measure/$Name"
        mkdir -p "$dir"
        {
            echo "#!/usr/bin/env bash"
            echo "cat stdout stderr |"
            echo -n "extract-regexp "; escape-args-for-shell "$@"
        } >"$dir"/measure
        chmod +x "$dir"/measure
        ;;
esac
