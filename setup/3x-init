#!/usr/bin/env bash
# 3x-init -- Initialize a new computational experiment directory
# 
# > 3x-init _3X_ROOT
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2013-01-24
set -eu

[ $# -gt 0 ] || usage "$0" "_3X_ROOT is missing"

_3X_ROOT=$1; shift

if [ -d "$_3X_ROOT" ]; then
    if [[ $(_3X_ROOT=$_3X_ROOT 3x-findroot 2>/dev/null) == $(readlink -f "$_3X_ROOT") ]]; then
        msg "No need to initialize $_3X_ROOT"
        exit
    else
        error "$_3X_ROOT already exists, but isn't an experiment directory"
    fi
fi

# initialize the _3X_ROOT
mkdir -p -- "$_3X_ROOT"
cd "$_3X_ROOT"
_3X_ROOT=$(pwd -P)
trap 'cd "$_3X_ROOT"/.. && rm -rf -- "$_3X_ROOT"' ERR

# make sure the filesystem of $_3X_ROOT allows hardlinks
(
trap 'error "$_3X_ROOT: filesystem has no proper hardlink support.
Specify a different directory on a filesystem supporting hardlink to create a 3X repository."' ERR
set -eu
mkdir -p .3x/ln-check
cd .3x/ln-check
mkdir subdir
touch file
ln -f file subdir/a-duplicate
echo ${h:=$RANDOM} >file
[[ $(cat subdir/a-duplicate 2>/dev/null) = $h ]]
)
rm -rf .3x/ln-check

# create the skeleton directories
mkdir -p .3x/{files,gui} input output program run

# copy some default files
customize "$DATADIR"/3x.template <<RULES
@@dot@@=.
RULES

# some more initializations
{
if ! [ -d run/queue ]; then
    3x-queue main
fi
if ! [ -d run/target ]; then
    3x-target local define local
    3x-target local
fi
} >/dev/null

msg "Initialized $_3X_ROOT"
