#!/usr/bin/env bash
# 3x-rescan -- extract outputs from runs, optionally with new extractors
# 
# > 3x rescan [-f] [RUN]...
# 
# If -f option is given, existing output extractors will be removed and
# replaced with the updated ones.
#
# To re-extract outputs whose name match a certain extglob pattern PATT:
# > _3X_RESCAN_ONLY=PATT \
# > 3x rescan [RUN]...
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2012-11-07
set -eu
shopt -s extglob

. find-run-archive.sh

ForceExtractExisting=false
while getopts "f" o; do
    case $o in
        f)
            ForceExtractExisting=true
            ;;
    esac
done
shift $(( $OPTIND - 1 ))

update-assembly-script >/dev/null

: ${_3X_RESCAN_ONLY:=}

find-rundirs "$@" -- |
{
cd "$_3X_ROOT"
export \
    _3X_ARCHIVE \
    _3X_ASSEMBLE \
    _3X_RESCAN_ONLY \
    ForceExtractExisting \
    #
# GNU parallel this + 3x-index update
parallel --plain --max-procs 50% --no-run-if-empty --ungroup '
set -eu
let SHLVL-=2 || true
rescan1() {
    runId=$1
    cd "$runId"
    newRunDir=$(mktemp -d "${TMPDIR:-/tmp}"/3x-rescan.XXXXXX)
    trap "rm -rf $newRunDir" EXIT
    # assemble output extractors for this run
    mkdir -p "$newRunDir"/workdir
    touch "$newRunDir"/workdir/run
    chmod +x "$newRunDir"/workdir/run
    SHLVL=$(( $SHLVL + 3 )) \
    _3X_IMPORT_ONLY="output/${_3X_RESCAN_ONLY:-*}" \
    "$_3X_ASSEMBLE" "$newRunDir" $(cat ./input) -- $(cat ./env) >/dev/null
    # prepare for injection of updated extractors
    chmod +w .
    unarchive "$_3X_ARCHIVE" output outputs
    updatedOs=
    # inject necessary ones to outputs/*/
    for newO in "$newRunDir"/outputs/*/; do
        newO=${newO%/}
        o=${newO#$newRunDir/}
        oName=${o#outputs/}
        [[ -z "$_3X_RESCAN_ONLY" ]] ||
            [[ "$o" == outputs/$_3X_RESCAN_ONLY ]] || continue
        if [ -e "$o" ]; then
            if $ForceExtractExisting; then
                rm -rf "$o"
                # TODO backup instead of removing?
            else
                continue
            fi
        fi
        msg -1 "$runId: updating $o"
        mv -f "$newO" "$o"
        updatedOs+="|$oName"
    done
    # extract output and dedup and seal for storage
    if [[ -z "$_3X_RESCAN_ONLY" ]]; then
        extractOnlyPatt=
    else
        extractOnlyPatt="@(${updatedOs#|})"
        # prepare for incremental output extraction (copy-on-write)
        cp -f output output.$$
        mv -f output.$$ output
        chmod +w output
    fi
    SHLVL=$(( SHLVL + 1 )) \
    _3X_EXTRACT_ONLY=$extractOnlyPatt \
    extract-output "$runId" || true
    archive "$_3X_ARCHIVE" output outputs
    chmod -w .
    echo "$runId"
}; rescan1 ' :::
} |
xargs -L10 -- 3x-index update
