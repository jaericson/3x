#!/usr/bin/env bash
# exp-run -- run an experiment with given parameters
# Usage: exp run NAME=VALUE [NAME=VALUE]...
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2012-11-01
set -eu

[ $# -ge 1 ] || usage "$0" "At least one NAME=VALUE pairs must be given"

EXPROOT=$(exp-findroot)
: ${EXPRUN:=$(new-run-id)}
export EXPROOT EXPRUN EXPWD="$EXPROOT/$EXPRUN"

# create a working directory for this experiment ($EXPWD)
mkdir -p "$EXPWD"

# assemble it for running and measurement
exp-assemble "$EXPWD" "$@"

# run it
msg "Running $EXPRUN with $*"
cd "$EXPWD"
setsid env - \
    PATH="$TOOLSDIR:$(dirname $(type -p sed)):$(dirname "$SHELL")" \
    EXPKIT_HOME="$EXPKIT_HOME" \
    EXPKIT_LOGLVL="$EXPKIT_LOGLVL" \
    EXPROOT="$EXPROOT" \
    EXPWD="$EXPWD" \
    EXPRUN="$EXPRUN" \
    record-run &
runpid=$!

# watch stdout and stderr
trap "kill -TERM -$runpid; wait" TERM INT
be-quiet +1 || {
tail -qF stdout --pid=$runpid      2>/dev/null &
tail -qF stderr --pid=$runpid 1>&2 2>/dev/null &
}
wait || true

if [ -e exitcode ]; then
    exitcode=$(cat exitcode)
    msg "Finished $EXPRUN with exitcode $exitcode"
else
    exitcode=127
    msg "Interrupted $EXPRUN"
    exit $exitcode
fi

# run measurements
for mx in exp.measure/*/measure; do
    m=$(basename "$(dirname "$mx")")
    if [ -x "$mx" ]; then
        # TODO under the same env
        echo "$m=$("$mx")"
    fi
done >exp.outcome

exit $exitcode
