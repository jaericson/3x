#!/usr/bin/env bash
# ssh/run.execute -- execute the run locally
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2013-07-13
set -eu
. remote-runner.sh
parseRemote

stderrLog="$_3X_LOGERROR".log
rm -f "$stderrLog"
tail -qF "$stderrLog" --pid=$$ 1>&2 2>/dev/null &
exec 3>&2 2>"$stderrLog"
error() { command error 2>&3 "$@"; }
errorWithSTDERR() { error "$@" "$(cat "$stderrLog")"; }

# abort on signals
for sig in INT QUIT TERM; do
    trap 'set +e
        error "$_3X_RUN: interrupted with SIG'$sig'"
        exit 127
        ' $sig
done


cd "$_3X_ROOT"

rsyncVerbose=
be-quiet +2 || rsyncVerbose="--stats"
be-quiet +3 || rsyncVerbose="--stats --verbose"

msg "$_3X_RUN: transferring to remote"
sshRemote mkdir -p "$remoteRoot/.3x" ||
    errorWithSTDERR "Could not reach $remoteHost via ssh or initialize 3X root at $remoteRoot/"
rsyncToRemote . --archive --hard-links --omit-dir-times --delete --relative $rsyncVerbose "$_3X_RUN" ||
    errorWithSTDERR "Could not transfer assembled runnable to $remoteHost via ssh"


cd "$_3X_ROOT/$_3X_RUN"

msg "$_3X_RUN: executing at remote"
set +e
{
    verbose=; be-quiet +4 || verbose="bash -x"
    echo 'set -eu
        cd "$_3X_ROOT/$_3X_RUN"'
    be-quiet +1 || echo '
tail -qF stdout --pid=$$      2>/dev/null &
tail -qF stderr --pid=$$ 1>&2 2>/dev/null &
'
    echo "$verbose ./execute.sh || true"
    echo "exit 0"
} |
sshRemote env _3X_ROOT="$remoteRoot" _3X_RUN="$_3X_RUN" bash -s ||
    error "Could not execute runnable at $remoteHost via ssh"


msg "$_3X_RUN: retrieving from remote"
rsyncFromRemote "$_3X_RUN"/ --archive --hard-links --remove-source-files $rsyncVerbose . ||
    errorWithSTDERR "Could not retrieve execution result from $remoteHost via ssh"
sshRemote find "$remoteRoot/$_3X_RUN" -exec rmdir -p {} + 2>/dev/null ||
    true # ignore any error during clean up


if [ -e exitstatus ]; then
    exitstatus=$(cat exitstatus)
    msg "$_3X_RUN: finished execution with exit status=$exitstatus"
else
    exitstatus=127
    msg "$_3X_RUN: incomplete execution"
    exit $exitstatus
fi
