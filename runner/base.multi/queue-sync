#!/usr/bin/env bash
# queue-sync -- synchronize current queue records with reality
# 
# > . find-runner.sh -
# > setsid queue-sync
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2013-09-23
set -eu
. multi-runner.sh

# clean up stale worker dirs
for _3X_WORKER_DIR in "$_3X_QUEUE_DIR"/$WORKER_DIR_PREFIX*; do
    [ -e "$_3X_WORKER_DIR" ] || continue
    _3X_WORKER_ID=${_3X_WORKER_DIR#$_3X_QUEUE_DIR/$WORKER_DIR_PREFIX}
    workerLock=$WORKER_LOCK_PREFIX$_3X_WORKER_ID.lock
    ! lockproc "$workerLock" alive || continue
    lockproc "$workerLock" grab

          count=$(wc -l   <"$_3X_WORKER_DIR"/runSerials)
    firstSerial=$(head -1 <"$_3X_WORKER_DIR"/runSerials)
     lastSerial=$(tail -1 <"$_3X_WORKER_DIR"/runSerials)
    msg +2 "$_3X_QUEUE_ID: cleaning up ABORTED runs among #$firstSerial - #$lastSerial ($count runs)"

    # TODO transfer ones from remote

    # act upon ABORTED runs only
    for-picked-runs list-only runId "state#"=ABORTED,RUNNING,PLANNED \
          >"$_3X_WORKER_DIR"/runIds2clean

    # clean up
    cd "$_3X_ROOT"
    xargs <"$_3X_WORKER_DIR"/runIds2clean   unarchive "$_3X_ARCHIVE"
    xargs <"$_3X_WORKER_DIR"/runIds2clean   rm -rf

    # revert state of the ABORTED runs back to PLANNED
    for-picked-runs list-only serial "state#"=ABORTED,RUNNING |
    xargs  queue mark-as PLANNED

    # finally, remove the worker dir
    rm -rf "$_3X_WORKER_DIR"
    lockproc "$workerLock" release
done

# then, reflect the queue state
queue-refresh
