#!/usr/bin/env bash
set -eu
shopt -s extglob

mkdir -p .build
cd .build

# compile a runtime dependency checker
mkdir -p runtime
rsync -rlH ../runtime/ --exclude=*.{commands,paths,test.sh,sh,txt} runtime/ --delete
generate-depends-checker ../runtime "Missing dependency: " "3X " >runtime/.check
chmod +x runtime/.check

# prepare bundled dependencies
bundledir=bundled
prepdir=bundled.prep
rm -rf "$bundledir"
mkdir -p "$bundledir" "$prepdir"
without-comments ../bundle.conf |
while read -r dep; do
    echo "### Preparing for bundling dependency $dep"
    prepared="$prepdir/$dep"
    # reuse prepared dependency if available
    if [ -L ../bundled/"$dep".sh ]; then
        origin=$(dirname "$(readlink ../bundled/"$dep".sh)")
        # TODO keep some sort of flag to indicate a complete dependency
        prepared="$origin/$dep"
        echo "# Reusing $prepared for dependency $dep"
    fi
    # otherwise, prepare the dependency
    if ! [ -d "$prepared" ]; then
        rsync -rlH ../bundled/"$dep".* --exclude=/*.bundle.sh "$prepdir"/ --delete
        prep="$prepdir/$dep".sh
        if [ -x "$prep" ]; then
            echo "# Preparing dependency $dep"
            "$prep"
        fi
    fi
    if ! [ -d "$prepared" ]; then
        echo >&2 "Unable to prepare dependency $dep"
        false
    fi
    # then, bundle only the necessary files
    bundle=../bundled/"$dep".bundle.sh
    if [ -x "$bundle" ]; then
        echo "# Using custom bundling rule for dependency $dep"
        "$bundle" "$prepared" "$bundledir"/
    else
        echo "# Bundling everything prepared for dependency $dep"
        rsync -aH "$prepared" "$bundledir"/ --delete
    fi
done
