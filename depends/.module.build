#!/usr/bin/env bash
set -eu
shopt -s extglob

mkdir -p .build
cd .build

# compile a runtime dependency checker
mkdir -p runtime
rsync -rlH ../runtime/ --exclude=*.{commands,paths,test.sh,sh,txt} runtime/ --delete
generate-depends-checker ../runtime "Missing dependency: " "3X " >runtime/.check
chmod +x runtime/.check

# prepare dependencies to be bundled
bundledir=bundled
prepdir=bundled.prep
rm -rf "$bundledir"
mkdir -p "$bundledir" "$prepdir"
rsync -rlH ../bundled/ --exclude=/*.{commands,paths,{test,bundle}.sh} "$prepdir"/ #--delete
without-comments ../bundle.conf |
while read -r dep; do
    echo "### Preparing for bundling dependency $dep"
    ln -sfn ../../bundled/"$dep".sh "$prepdir"/
    # reuse prepared dependency if available
    if [ -L ../bundled/"$dep".sh -a ! -e "$prepdir/$dep" ]; then
        origin=$(dirname "$(readlink ../bundled/"$dep".sh)")
        ln -sfn "$(relpath "$prepdir" "$origin/$dep")" "$prepdir/$dep"
    fi
    {
        echo '
        prepared="$DEPENDSDIR/'"$dep"'"
        [ -d "$prepared" -a -e "$prepared"/.prepared ]
        '
    } >"$prepdir"/"$dep".test.sh
    chmod +x "$prepdir/$dep".test.sh
done
generate-depends-checker "$prepdir" |
DEPENDSDIR="$prepdir" bash -eux

# then, bundle only the necessary files from each dependency
without-comments ../bundle.conf |
while read -r dep; do
    bundle=../bundled/"$dep".bundle.sh
    if [ -x "$bundle" ]; then
        echo "# Using custom bundling rule for dependency $dep"
        "$bundle" "$prepdir/$dep"/ "$bundledir/$dep"/
    else
        echo "# Bundling everything prepared under prefix for dependency $dep"
        rsync -aH "$prepdir/$dep"/prefix "$bundledir/$dep"/ --delete
    fi
done

# and the ones to be exposed
rsync -aH "$prepdir"/.all "$bundledir"/ --delete

