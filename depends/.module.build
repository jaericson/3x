#!/usr/bin/env bash
set -eu
shopt -s extglob

mkdir -p .build
cd .build

# compile a runtime dependency checker
mkdir -p runtime
rsync -rlH ../runtime/ --exclude=*.{commands,paths,test.sh,sh,txt} runtime/ --delete
generate-depends-checker ../runtime "Missing dependency: " >runtime/.check
chmod +x runtime/.check

# prepare embedded dependencies
embeddir=embedded
dependsdir=embedded.build
mkdir -p "$embeddir" "$dependsdir"
without-comments ../embed.conf |
while read -r dep; do
    echo "### Preparing for embedding dependency $dep"
    prepared="$dependsdir/$dep"
    # reuse prepared dependency if available
    if [ -L ../embedded/"$dep".sh ]; then
        origin=$(dirname "$(readlink ../embedded/"$dep".sh)")
        # TODO keep some sort of flag to indicate a complete dependency
        prepared="$origin/$dep"
        echo "# Reusing $prepared for dependency $dep"
    fi
    # otherwise, prepare the dependency
    if ! [ -d "$prepared" ]; then
        rsync -rlH ../embedded/"$dep".* --exclude=/*.embed.sh "$dependsdir"/ --delete
        prep="$dependsdir/$dep".sh
        if [ -x "$prep" ]; then
            echo "# Preparing dependency $dep"
            "$prep"
        fi
    fi
    if ! [ -d "$prepared" ]; then
        echo >&2 "Unable to prepare dependency $dep"
        false
    fi
    # then, embed only the necessary files
    embed=../embedded/"$dep".embed.sh
    if [ -x "$embed" ]; then
        echo "# Using custom embedding rule for dependency $dep"
        "$embed" "$prepared" "$embeddir"/
    else
        echo "# Embedding everything prepared for dependency $dep"
        rsync -aH "$prepared" "$embeddir"/ --delete
    fi
done
