#!/usr/bin/env bash
set -eu
shopt -s extglob nullglob

Self="$(cd "$(dirname "$0")" && pwd -P)/$(basename "$0")"

# how to compile CoffeeScripts
compile-coffee-to() {
    local dest=$1; shift
    for cs; do
        js=${cs%.coffee}.js
        js=${js##*/}
        [[ "$cs" -nt "$dest"/"$js" ]] || continue
        echo >&2 "Compiling $cs..."
        coffee -c -m -o "$dest" "$cs" &
    done
    wait
}
# how to convert legacy codes to AMD modules
convertAMD() {
    local src=$1 dst=$2
    if [[ "$src" -nt "$dst" || -L "$dst" ]]; then
        echo >&2 "Converting to AMD $dst..."
        rm -f "$dst"
        {
            echo 'define(function(require, exports, module) {'
            cat "$src"
            echo '});'
        } >"$dst"
    fi
}


## build server code and dependencies
compile-coffee-to .build  *.coffee

cd .build
ln -sfn ../package.json .
[ node_modules -nt package.json ] || {
    echo >README.md
    npm install
    touch node_modules
}

#  server depends on some python packages, e.g., watchdog
[ -d python-packages -a python-packages -nt "$Self" ] || {
    echo >&2 "Bundling python packages..."
    dir_pypkgs="$PWD/python-packages"
    dir_easy_install="$PWD/python-packages.easy_install"
    export PYTHONPATH="$dir_pypkgs"
    mkdir -p -- "$dir_pypkgs"
    python_version=$(python -V 2>&1 | sed 's/.*Python \([0-9]*\.[0-9]*\).*/\1/')
    easy_install=easy_install-$python_version
    type $easy_install &>/dev/null || {
        # use a local copy of easy_install
        export PYTHONPATH="$dir_easy_install:$PYTHONPATH"
        export PATH="$dir_easy_install:$PATH"
        type $easy_install &>/dev/null || {
            # install a local copy of easy_install
            mkdir -p -- "$dir_easy_install"
            curl -s http://peak.telecommunity.com/dist/ez_setup.py |
            python -- - --install-dir "$dir_easy_install"
            type $easy_install &>/dev/null || {
                echo >&2 "$easy_install: command not found"
                exit 127
            }
        }
    }
    $easy_install --install-dir "$dir_pypkgs" --always-copy \
        watchdog \
        #
    # fix hard-coded Python interpreter
    {
        echo '/^#!/d'
        echo 'i'
        echo '#!/usr/bin/env python'
        echo '.'
        echo 'wq'
    } | ed "$dir_pypkgs"/watchmedo >/dev/null
}
cd ..

## build client
mkdir -p .build/client/{prototype,src}

cd client
implicit-dependency() {
    local f= t=$1; shift
    for f; do
        [[ "$f" -nt "$t" ]] || continue
        touch -r "$f" "$t"
    done
}
implicit-dependency index.html.in   */{body,tab}.html
implicit-dependency main.coffee.in  */*Section.coffee
implicit-dependency 3x.less.in      */*.less
#  first generate from executable sources
for src in *.in; do
    out=../.build/client/${src%.in}
    [[ "$src" -nt "$out" ]] || continue
    echo >&2 "Compiling $src..."
    compile-xdocs <"$src" >"$out"
done
cd ..

# prepare some symlinks to simplify the rest of the build process
find client/{{,*/}*.coffee,*.less} .build/client/*.{coffee,less} \
    -exec relsymlink {} .build/client/src/ \;
relsymlink extern .build/client/prototype/


# build and symlink external libraries
( cd extern/jquery
[ -s dist/jquery.js ] || {
    echo >&2 "Building jquery..."
    npm install
    grunt
}
)

( cd extern/jquery-ui
[ -s dist/minified/jquery.ui.core.min.js ] || {
    echo >&2 "Building jquery-ui..."
    npm install
    grunt release
}
)

( cd extern/knockout
[ -s build/output/knockout-latest.debug.js ] || {
    echo >&2 "Building knockout..."
    npm install
    grunt build:debug
}
)

( cd extern/bootstrap
[ -s bootstrap/js/bootstrap.js ] || {
    echo >&2 "Building bootstrap..."
    npm install
    make bootstrap-js
    git config core.excludesfile ../bootstrap.gitignore
}
)

# symlink external dependencies
cd .build/client/prototype
mkdir -p DataTables/{css,images} Font-Awesome
relsymlink extern/requirejs/require.js                                                               .
relsymlink extern/underscore/underscore.js                                                           .
relsymlink extern/Numeral-js/numeral.js                                                              .
relsymlink extern/jquery/dist/jquery.js                                                              .
relsymlink extern/bootstrap/bootstrap/js/bootstrap.js                                                .
relsymlink extern/jquery-ui/dist/jquery-ui-*/themes/base                                             ./jquery-ui
relsymlink extern/jquery-ui/dist/jquery-ui-*/ui/jquery.ui.core.js                                    .
relsymlink extern/jquery-ui/dist/jquery-ui-*/ui/jquery.ui.mouse.js                                   .
relsymlink extern/jquery-ui/dist/jquery-ui-*/ui/jquery.ui.widget.js                                  .
relsymlink extern/jquery-ui/dist/jquery-ui-*/ui/jquery.ui.selectable.js                              .
relsymlink extern/jquery-ui/dist/jquery-ui-*/ui/jquery.ui.sortable.js                                .
relsymlink extern/jsrender/jsrender.js                                                               .
relsymlink extern/knockout/build/output/knockout-latest.debug.js                                     ./knockout.js
relsymlink extern/d3/d3.js                                                                           .
relsymlink extern/Font-Awesome/font                                                                  .
relsymlink ../../node_modules/socket.io/node_modules/socket.io-client/dist/socket.io.js              .
relsymlink ../../node_modules/socket.io/node_modules/socket.io-client/dist/WebSocketMain.swf         .
relsymlink ../../node_modules/socket.io/node_modules/socket.io-client/dist/WebSocketMainInsecure.swf .
relsymlink extern/DataTables/media/js/jquery.dataTables.js                                           .
convertAMD extern/DataTables.Scroller/media/js/dataTables.scroller.js                                ./jquery.dataTables.Scroller.js
relsymlink extern/DataTables.Scroller/media/css/dataTables.scroller.css                              DataTables/css/
relsymlink extern/DataTables.Scroller/media/images/loading-background.png                            DataTables/css/
convertAMD extern/DataTables.ColReorder/media/js/ColReorder.js                                       ./jquery.dataTables.ColReorder.js
relsymlink extern/DataTables.ColReorder/media/css/ColReorder.css                                     DataTables/css/
relsymlink extern/DataTables.ColReorder/media/images/insert.png                                      DataTables/images/
convertAMD extern/DataTables.Plugins/sorting/num-html.js                                             ./jquery.dataTables.sorting.num-html.js
convertAMD extern/DataTables.Plugins/type-detection/num-html.js                                      ./jquery.dataTables.type-detection.num-html.js
convertAMD extern/DataTables.Plugins/integration/bootstrap/dataTables.bootstrap.js                   ./jquery.dataTables.bootstrap.js
relsymlink extern/DataTables.Plugins/integration/bootstrap/dataTables.bootstrap.css                  DataTables/
for i in sort_{{asc,desc}{,_disabled},both}.png; do
relsymlink extern/DataTables.Plugins/integration/bootstrap/images/$i                                 DataTables/images/
done


# compile CoffeeScript sources
compile-coffee-to . ../src/!(app.build).coffee


# compile LESS source codes
#  after preparing some files for stylesheet compilations
[ -L bootstrap/less ] || {
    rm -rf ../src/bootstrap
    mkdir -p ../src/bootstrap/
    cp -af extern/bootstrap/less ../src/bootstrap/
    # remove sprites.less in favor of Font-Awesome
    rm -f ../src/bootstrap/less/sprites.less
    echo "//" >../src/bootstrap/less/sprites.less
    mkdir -p bootstrap
    relsymlink ../src/bootstrap/less bootstrap/
}
[ -L Font-Awesome/less ] || {
    rm -rf ../src/Font-Awesome
    mkdir -p ../src/Font-Awesome
    relsymlink ../../../extern/Font-Awesome/less ../src/Font-Awesome/
    relsymlink ../src/Font-Awesome/less Font-Awesome/
}
for less in ../src/*.less; do
    css=${less%.less}.css
    css=${css##*/}
    [[ "$less" -nt "$css" ]] || continue
    echo >&2 "Compiling $less..."
    lessc "$less" "$css"
done


# compile files that'll go into files/resource
rsync -av --copy-links --omit-dir-times --delete-excluded \
    --exclude={/extern,less,**.less} . ../resource

