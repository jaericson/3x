#!/usr/bin/env bash
# 3x-gui -- GUI for EXecutable EXploratory EXperiments
# 
# > 3x gui [start [PORT]]
# > 3x gui stop
# > 3x gui watch
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2012-11-11
set -eu
shopt -s extglob

host=$(hostname -f)

basePort=38796
computeDefaultPort() {
    # randomize default port deterministically per user
    local sha1=$(sha1sum <<<"$USER")
    local port=$(printf "%d" 0x${sha1:0:4})
    local q=$(( 65536 - $basePort ))
    port=$(( $port % $q + $basePort ))
    echo $port
}

_3X_ROOT=$(3x-findroot)
export _3X_ROOT

# make sure we don't go into an editor
export EDITOR=true VISUAL=true

cd "$_3X_ROOT"

mkdir -p .3x/gui
portfile=.3x/gui/port
logfile=.3x/gui/log
pidfile=.3x/gui/pid
get-pid() { ps -o pid= -p $(cat $pidfile); } 2>/dev/null

cmd=${1:-start}
[ $# -eq 0 ] || shift
case $cmd in
    start)
        pids=$(get-pid || true)
        port=$(cat $portfile 2>/dev/null || true)
        launchNew=false
        if [ -z "$pids" ]; then
            # use given port or reuse the last port or the default
            port=${1:-${port:-$(computeDefaultPort)}}
            launchNew=true
        else
            msg "3X GUI already running at http://$host:$port/"
            if [ $# -eq 1 ] && [ "$1" != "$port" ]; then
                # launch another GUI on different port
                port=$1
                launchNew=true
            fi
        fi
        if $launchNew; then
            # fail or find unused one if port is already in use
            if nc -z localhost $port &>/dev/null; then
                [ $# -eq 0 ] ||
                    error "Cannot start GUI at port $port: already in use"
                # determine unused port automatically, by keep incrementing it
                let ++port
                while nc -z localhost $port &>/dev/null; do
                    let ++port
                    # but never exceed the max port
                    [[ $port -lt 65536 ]] || error "Cannot start GUI, specify an available port number"
                done
            fi
            url="http://$host:$port/"
            # launch server
            python_site_dir="$GUIDIR"/server/python-packages
            PATH="$python_site_dir:$PATH" \
            PYTHONPATH="$python_site_dir${PYTHONPATH:+:$PYTHONPATH}" \
            setsid node "$GUIDIR"/server/3x-gui.js $port \
                </dev/null >$logfile 2>&1 &
            pid=$!
            # record pid, port
            pids="$pid $(get-pid || true)"
            echo $pids >$pidfile
            echo $port >$portfile
            started=false
            for ((i=0; $i<10; i++)); do
                if nc -z localhost $port &>/dev/null; then
                    started=true; break
                else
                    sleep 0.1
                fi
            done
            if $started; then
                msg "3X GUI started at $url"
            else
                cat >&2 $logfile
                error "3X GUI could not be started"
            fi
        else
            url="http://$host:$port/"
        fi
        # watch log if requested
        be-quiet +1 || 3x-gui watch &
        # and launch web browser on known platforms
        case $(uname) in
            Darwin) # Mac
                open "$url"
                ;;
        esac
        trap "kill -TERM \$(for pid in $pids; do echo -\$pid; done)" INT QUIT TERM
        wait
        ;;

    watch)
        # watch log
        pids=($(get-pid)) || error "3X GUI not running"
        pid=${pids[0]}
        exec tail -qF $logfile --pid=$pid 2>/dev/null
        ;;

    stop)
        pids=$(get-pid) || error "3X GUI not running"
        kill -TERM $(for pid in $pids; do echo -$pid; done)
        mv -f $logfile $logfile.0
        rm -f $pidfile
        msg "3X GUI stopped"
        ;;

    # when it looks like a port number, do start instead of complaining
    +([0-9]))
        exec 3x-gui start $cmd "$@"
        ;;

    *)
        usage "$0" "$cmd: Unknown command"
        ;;
esac
